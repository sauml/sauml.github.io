<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Sauml Blog Notes</title>
    <link>/post/index.xml</link>
    <description>Recent content in Posts on Sauml Blog Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-FR</language>
    <lastBuildDate>Wed, 13 Jan 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Correction d&#39;orthographe sous vim</title>
      <link>/2016/01/13/vim-correction-orthographe/</link>
      <pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/01/13/vim-correction-orthographe/</guid>
      <description>

&lt;h1 id=&#34;installation&#34;&gt;Installation&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Fermer vim&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;sous-window&#34;&gt;Sous window&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Aller dans le répertoire des langues vim&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd C:\Program Files\Vim\vim74\spell
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Télécharger les fichiers de traduction.&lt;br /&gt;
Penser à paramétrer le proxy si besoin &lt;code&gt;set et HTTP_PROXY=http://...&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -o fr.latin1.spl http://ftp.vim.org/vim/runtime/spell/fr.latin1.spl
curl -o fr.latin1.sug http://ftp.vim.org/vim/runtime/spell/fr.latin1.sug
curl -o fr.utf-8.spl http://ftp.vim.org/vim/runtime/spell/fr.utf-8.spl
curl -o fr.utf-8.sug http://ftp.vim.org/vim/runtime/spell/fr.utf-8.sug
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;sous-linux&#34;&gt;Sous linux&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Aller dans le répertoire des langues vim (le créer s&amp;rsquo;il n&amp;rsquo;existe pas).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p ~/.vim/spell
cd ~/.vim/spell
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Télécharger les fichiers de traduction&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://ftp.vim.org/vim/runtime/spell/fr.latin1.spl
wget http://ftp.vim.org/vim/runtime/spell/fr.latin1.sug
wget http://ftp.vim.org/vim/runtime/spell/fr.utf-8.spl
wget http://ftp.vim.org/vim/runtime/spell/fr.utf-8.sug
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;paramétrage&#34;&gt;Paramétrage&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Dans &lt;code&gt;.vimrc&lt;/code&gt; ajouter:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;set spelllang=fr&lt;/code&gt; pour définir la langue.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set spell&lt;/code&gt; pour activer la correction par défaut.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;utilisation&#34;&gt;Utilisation&lt;/h1&gt;

&lt;h2 id=&#34;en-mode-normal&#34;&gt;En mode normal&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;]s&lt;/code&gt; va au mot suivant.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[s&lt;/code&gt; va au mot précédent.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zg&lt;/code&gt; ajoute le mot dans le dictionnaire local.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zG&lt;/code&gt; ajoute le mot au dictionnaire global.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;z=&lt;/code&gt; affiche la liste des propositions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;en-mode-insertion&#34;&gt;En mode insertion&lt;/h2&gt;

&lt;p&gt;Il es possible d&amp;rsquo;afficher les propositions en cours de frappe.&lt;br /&gt;
Pour cela, il faut utiliser la complétion &lt;code&gt;Ctrl+X&lt;/code&gt;.&lt;br /&gt;
Le mode de complétion utilisé par &lt;code&gt;spell&lt;/code&gt; est &lt;code&gt;s&lt;/code&gt;.&lt;br /&gt;
Il suffit donc lorsqu&amp;rsquo;une faute apparait de faire &lt;code&gt;Ctrl+X&lt;/code&gt; puis &lt;code&gt;s&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Création du blog-notes avec Pélican</title>
      <link>/2015/12/16/pelican-creation-site/</link>
      <pubDate>Wed, 16 Dec 2015 22:48:34 +0100</pubDate>
      
      <guid>/2015/12/16/pelican-creation-site/</guid>
      <description>

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;La création de la structure du site est détaillée ici: &lt;a href=&#34;/2015/12/15/installation-de-pelican/&#34;&gt;Installation de Pélican&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cet article concerne la création de ce blog-notes.&lt;/p&gt;

&lt;h2 id=&#34;création-du-site&#34;&gt;Création du site&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;C:\Applis\Wiki\pelican\pelican&amp;gt;pelican-quickstart
Welcome to pelican-quickstart v3.6.3.

This script will help you create a new Pelican-based website.

Please answer the following questions so this script can generate the files
needed by Pelican.

&amp;gt; Where do you want to create your new web site? [.] sauml.bitbucket.org
&amp;gt; What will be the title of this web site? Mes Notes
&amp;gt; Who will be the author of this web site? sauml
&amp;gt; What will be the default language of this web site? [en] fr
&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   (Y/n)
&amp;gt; What is your URL prefix? (see above example; no trailing slash) http://sauml.b
itbucket.org/
&amp;gt; Do you want to enable article pagination? (Y/n)
&amp;gt; How many articles per page do you want? [10]
&amp;gt; What is your time zone? [Europe/Paris]
&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishi
ng? (Y/n)
&amp;gt; Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site d
evelopment? (Y/n)
&amp;gt; Do you want to upload your website using FTP? (y/N)
&amp;gt; Do you want to upload your website using SSH? (y/N)
&amp;gt; Do you want to upload your website using Dropbox? (y/N)
&amp;gt; Do you want to upload your website using S3? (y/N)
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? (y/N)
&amp;gt; Do you want to upload your website using GitHub Pages? (y/N)
Done. Your new project is available at C:\Applis\Wiki\pelican\pelican\sauml.bitb
ucket.org
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;création-des-lanceurs-pour-windows&#34;&gt;Création des lanceurs pour windows&lt;/h1&gt;

&lt;p&gt;Dans le répertoire sauml.bitbucket.org
Créer les fichiers suivants:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pelrun.bat&lt;/code&gt; pour générer le contenu du site de debug dans le dossier output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pelican content --debug --autoreload  --output output --settings pelicanconf.py
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;pelserve.bat&lt;/code&gt; pour lancer le site de debug&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pushd output
python -m pelican.server
popd
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;pelpub.bat&lt;/code&gt; pour générer le site de production dans le dossier output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pelican content --output output --settings publishconf.py
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour développer me site en local, lancer:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sauml.bitbucket.org&amp;gt;start pelrun.bat
sauml.bitbucket.org&amp;gt;start pelserve.bat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Le site est disponible à l&amp;rsquo;url &lt;a href=&#34;http://127.0.0.1:8000&#34;&gt;http://127.0.0.1:8000&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;configuration&#34;&gt;Configuration&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Dé-commenter &lt;code&gt;RELATIVE_URLS = True&lt;/code&gt; dans &lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Mettre &lt;code&gt;DELETE_OUTPUT_DIRECTORY = False&lt;/code&gt; dans &lt;code&gt;publishconf.py&lt;/code&gt; pour ne pas supprimer le dépôt git dans output.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;thèmes&#34;&gt;Thèmes&lt;/h2&gt;

&lt;p&gt;Récupérer les thèmes existants:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pelican&amp;gt;git clone https://github.com/getpelican/pelican-themes.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Définir le thème choisi dans pelicanconf.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;THEME = &amp;quot;../pelican-themes/foundation-default-colours&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;plugins&#34;&gt;Plugins&lt;/h2&gt;

&lt;p&gt;Pour les récupérer&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pelican&amp;gt;git clone https://github.com/getpelican/pelican-plugins.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puis dans pelicanconf.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PLUGIN_PATH = &#39;../pelican-plugins&#39;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Test du theme en cours</title>
      <link>/2015/12/16/test-theme/</link>
      <pubDate>Wed, 16 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/12/16/test-theme/</guid>
      <description>

&lt;h1 id=&#34;titre-niveau-1&#34;&gt;titre niveau 1&lt;/h1&gt;

&lt;h2 id=&#34;titre-niveau-2&#34;&gt;titre niveau 2&lt;/h2&gt;

&lt;h3 id=&#34;titre-niveau-3&#34;&gt;titre niveau 3&lt;/h3&gt;

&lt;h4 id=&#34;titre-niveau-4&#34;&gt;titre niveau 4&lt;/h4&gt;

&lt;h5 id=&#34;titre-niveau-5&#34;&gt;titre niveau 5&lt;/h5&gt;

&lt;h6 id=&#34;titre-niveau-6&#34;&gt;titre niveau 6&lt;/h6&gt;

&lt;p&gt;####### titre niveau 7&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;2015-12-15_pelican_installation.md&#34;&gt;2015-12-15_pelican_installation.md&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installation de Pélican</title>
      <link>/2015/12/15/installation-de-pelican/</link>
      <pubDate>Tue, 15 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/12/15/installation-de-pelican/</guid>
      <description>

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Pélican est un générateur de site statique écrit en python.&lt;/p&gt;

&lt;p&gt;Un générateur de site statique permet de générer en site constitué de pages
html à partir de fichiers texte saisis dans différents formats Markdown,
reStructuredText, &amp;hellip;&lt;/p&gt;

&lt;p&gt;Il est facile d&amp;rsquo;héberger le site généré sur github ou bitbucket par exemple.&lt;/p&gt;

&lt;h1 id=&#34;installation&#34;&gt;Installation&lt;/h1&gt;

&lt;p&gt;Python et pip doivent être installés.
Il suffit de lancer.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install pelican
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Il est préférable de l&amp;rsquo;installé dans un environnement virtuel
python.&lt;br /&gt;
Je ne le fais pas pour cette installation qui n&amp;rsquo;est pas définitive.&lt;/p&gt;

&lt;h1 id=&#34;création-des-répertoires-de-travail&#34;&gt;Création des répertoires de travail&lt;/h1&gt;

&lt;p&gt;Je crée les répertoires suivants:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pelican&lt;/code&gt; qui contiendra tous les éléments relatifs à pélican.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pelican-themes&lt;/code&gt; qui permettra de récupérer tous les thèmes pélicans.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sauml.bitbucket.org&lt;/code&gt; qui correspond à ce blog-notes.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;./pelican
├── pelican-plugins
├── pelican-themes
└── sauml.bitbucket.org
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tout est en place pour la création d&amp;rsquo;un site.&lt;br /&gt;
Un exemple est disponible ici: &lt;a href=&#34;/2015/12/16/pelican-creation-site/&#34;&gt;Création du blog-notes avec Pélican&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>