<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Sauml Blog Notes</title>
    <link>/post/index.xml</link>
    <description>Recent content in Posts on Sauml Blog Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-FR</language>
    <lastBuildDate>Fri, 03 Mar 2017 22:38:10 +0100</lastBuildDate>
    <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo Partie 2: Installer</title>
      <link>/2017/03/hugo-2-installer/</link>
      <pubDate>Fri, 03 Mar 2017 22:38:10 +0100</pubDate>
      
      <guid>/2017/03/hugo-2-installer/</guid>
      <description>

&lt;p&gt;Cet article est le deuxième article de la série consacrée aux étapes que j&amp;rsquo;ai suivies pour mettre en place ce blog avec hugo.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/2017/02/hugo-1-index/&#34;&gt;Hugo Partie 1: Index.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/2017/03/hugo-2-installer/&#34;&gt;Hugo Partie 2: Installer.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hugo Partie 3: Configurer.&lt;/li&gt;
&lt;li&gt;Hugo Partie 4: Modifier le thème.&lt;/li&gt;
&lt;li&gt;Hugo Partie 5: Gérer les liens.&lt;/li&gt;
&lt;li&gt;Hugo Partie 6: Déployer.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;installer-hugo&#34;&gt;Installer hugo&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Aller sur la &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;page de téléchargement&lt;/a&gt;.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Récupérer l&amp;rsquo;archive correspondant à:&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;la dernière version.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;l&amp;rsquo;os.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;sous-s2-ubuntu&#34;&gt;Sous S2 - Ubuntu&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Récupérer &lt;code&gt;hugo_0.18.1-64bit.deb&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;installer le package.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -i hugo*.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Vérifier l&amp;rsquo;installation&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;~$ hugo version
Hugo Static Site Generator v0.18.1 BuildDate: 2016-12-30T11:05:34+01:00
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sous-w1-windows-7&#34;&gt;Sous W1 - Windows 7&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Récupérer hugo_0.18.1_Windows-32bit.zip.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Dézipper l&amp;rsquo;archive.&lt;/li&gt;
&lt;li&gt;Mettre le fichier hugo.exe dans le path.

&lt;ul&gt;
&lt;li&gt;Pour W1, copier dans &lt;code&gt;c:\_me\appPortables\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Créer un raccourcis dans&lt;code&gt;c:\_me\bin\&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Vérifier l&amp;rsquo;installation.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;c:\ hugo version
Hugo Static Site Generator v0.18.1 BuildDate: 2016-12-30T11:05:34+01:00
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;créer-un-nouveau-site&#34;&gt;Créer un nouveau site&lt;/h1&gt;

&lt;p&gt;Créer la structure&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site sauml.github.io

Congratulations! Your new Hugo site is created in /xxx/xxx/sauml.github.io.

Just a few more steps and you&#39;re ready to go:

1. Download a theme into the same-named folder.
   Choose a theme from https://themes.gohugo.io/, or
   create your own with the &amp;quot;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;quot; command.
2. Perhaps you want to add some content. You can add single files
   with &amp;quot;hugo new &amp;lt;SECTIONNAME&amp;gt;/&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;quot;.
3. Start the built-in live server via &amp;quot;hugo server&amp;quot;.

Visit https://gohugo.io/ for quickstart guide and full documentation.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La structure du site est alors crée.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tree -L 1
.
├── archetypes
├── content
├── layouts
├── static
├── themes
└── config.toml

5 directories, 1 files

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;installer-un-thème&#34;&gt;Installer un thème&lt;/h1&gt;

&lt;p&gt;Hugo n&amp;rsquo;installe pas de thème par défaut.&lt;br /&gt;
Il faut donc en choisir un &lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;ici&lt;/a&gt; et l&amp;rsquo;installer.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd sauml.github.io/themes/
$ git clone https://github.com/appernetic/hugo-bootstrap-premium
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;premier-post&#34;&gt;Premier post&lt;/h1&gt;

&lt;p&gt;Il est maintenant possible de créer le premier post.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new post/Mon-post.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Un fichier &lt;code&gt;Mon-post.md&lt;/code&gt; est créé dans &lt;code&gt;sauml.github.io/content/post/&lt;/code&gt;&lt;br /&gt;
Le contenu du fichier est le suivant:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+++
date = &amp;quot;2017-03-03T22:38:10+01:00&amp;quot;
draft = true
title = &amp;quot;Mon Post&amp;quot;

+++

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ces lignes corresponde à l&amp;rsquo;en-tête du fichier.&lt;br /&gt;
Il suffit de saisir le contenu après cette zone.&lt;/p&gt;

&lt;h1 id=&#34;visualiser-le-résultat&#34;&gt;Visualiser le résultat&lt;/h1&gt;

&lt;p&gt;Se placer à la racine du site.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /xxx/xxx/sauml.github.io 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Démarrer le serveur de tests&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server -D
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Le paramètre &lt;code&gt;-D (--buidDraft)&lt;/code&gt; permet de voir les post notés comme brouillons.&lt;/p&gt;

&lt;p&gt;Le site est maintenant visible à l&amp;rsquo;adresse &lt;a href=&#34;http://localhost:1313&#34;&gt;http://localhost:1313&lt;/a&gt;.&lt;br /&gt;
Le contenu est mis çà jour automatiquement à chaque modification.&lt;br /&gt;
Ce qui est particulièrement intéressant lors de la saisie d&amp;rsquo;un article, car les modifications sont visibles à chaque enregistrement du fichier source.&lt;/p&gt;

&lt;h1 id=&#34;a-suivre&#34;&gt;A suivre &amp;hellip;&lt;/h1&gt;

&lt;p&gt;Le prochain article sera consacré au paramétrage du site.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo Partie 1: Index</title>
      <link>/2017/02/hugo-1-index/</link>
      <pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/02/hugo-1-index/</guid>
      <description>

&lt;p&gt;Après avoir choisi d&amp;rsquo;utiliser Hugo pour garder une trace de mes notes (voir explication &lt;a href=&#34;/2017/02/un-blog-pour-mes-notes/&#34;&gt;ici&lt;/a&gt;), il me reste à mettre en place les outils choisis.&lt;/p&gt;

&lt;p&gt;Je vais détailler les différentes étapes que je réaliserai pour y arriver.&lt;br /&gt;
Il y aura donc une série d&amp;rsquo;articles consacrées à la mise en place de ce blog à l&amp;rsquo;aide de Hugo.&lt;br /&gt;
Je mettrai à jour, améliorerai ou corrigerai les différentes parties en fonction de mon avancée dans la découvertes de Hugo.&lt;/p&gt;

&lt;p&gt;Cet index permettra de faire le lien vers les articles de la série ou vers des articles externes qui me semblent intéressants.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/2017/02/hugo-1-index/&#34;&gt;Hugo Partie 1: Index.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/2017/03/hugo-2-installer/&#34;&gt;Hugo Partie 2: Installer.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hugo Partie 3: Configurer.&lt;/li&gt;
&lt;li&gt;Hugo Partie 4: Modifier le thème.&lt;/li&gt;
&lt;li&gt;Hugo Partie 5: Gérer les liens.&lt;/li&gt;
&lt;li&gt;Hugo Partie 6: Déployer.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;liens-intéressants&#34;&gt;Liens intéressants&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Site Officiel &lt;a href=&#34;https://gohugo.io/&#34;&gt;https://gohugo.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;a-suivre&#34;&gt;A suivre&amp;hellip;&lt;/h1&gt;

&lt;p&gt;Le prochain &lt;a href=&#34;/2017/03/hugo-2-installer/&#34;&gt;article&lt;/a&gt; sera consacré à l&amp;rsquo;installation de Hugo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Un blog pour mes notes</title>
      <link>/2017/02/un-blog-pour-mes-notes/</link>
      <pubDate>Fri, 24 Feb 2017 23:25:04 +0100</pubDate>
      
      <guid>/2017/02/un-blog-pour-mes-notes/</guid>
      <description>

&lt;p&gt;Je cherche une solution pour sauvegarder mes notes, les rendre accessibles de partout et les modifier des mes différents postes.&lt;/p&gt;

&lt;h1 id=&#34;les-contraintes&#34;&gt;Les contraintes&lt;/h1&gt;

&lt;p&gt;Les postes que j&amp;rsquo;utilise sont principalement:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;S2: mon portable perso actuellement sous mubuntu 16.04 LTS.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;w1: mon portable professionnel sous Windows seven 32bits.&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;Je ne suis pas administrateur de se poste.&lt;br /&gt;
Je ne peu donc y installer que des applications portables.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Il est derrière un proxy qui interdit la plus part des services de cloud.&lt;br /&gt;
Je ne peux donc pas utiliser evernote, onenote ou autres solution du même type.&lt;br /&gt;
J&amp;rsquo;arrive à accéder à &lt;a href=&#34;https://simplenote.com/&#34;&gt;simplenote&lt;/a&gt; que j&amp;rsquo;utilise pour la prise de note rapide.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Mon téléphone qui est sous Windows.&lt;br /&gt;
Les applications sont donc très limitées.&lt;br /&gt;
Il y a 1 ou deux clients pour simplenote, mais ils ne sont vraiment pas pratiques.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;J&amp;rsquo;aimerais une solution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;simple,&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;pas chère,&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;ne demandant pas ou peu de maintenance.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;J&amp;rsquo;ai donc penser à un blog pour répondre aux différentes contraintes d&amp;rsquo;accessibilité.&lt;/p&gt;

&lt;h1 id=&#34;le-moteur-de-blog-hugo&#34;&gt;Le moteur de blog : Hugo&lt;/h1&gt;

&lt;p&gt;En recherchant une solution, j&amp;rsquo;ai découvert, qu&amp;rsquo;il existant de outils permettant de générer des &lt;a href=&#34;https://fr.wikipedia.org/wiki/Site_web#Sites_statiques&#34;&gt;sites statiques&lt;/a&gt; à partir de simples fichiers textes.&lt;/p&gt;

&lt;p&gt;Différents formats de texte sont utilisés. Certaines applications permettent de choisir le format, d&amp;rsquo;autres n&amp;rsquo;en acceptent qu&amp;rsquo;un seul.&lt;/p&gt;

&lt;p&gt;Parmi les formats utilisés, le &lt;a href=&#34;https://fr.wikipedia.org/wiki/Markdown&#34;&gt;markdown&lt;/a&gt; est fréquent. Ça tombe bien, je l&amp;rsquo;utilise déjà.&lt;/p&gt;

&lt;p&gt;J&amp;rsquo;ai déjà essayé &lt;a href=&#34;http://docs.getpelican.com/en/stable/&#34;&gt;Pélican&lt;/a&gt; mais il nécessite d&amp;rsquo;installer python.&lt;br /&gt;
D&amp;rsquo;ailleurs, la plus part des générateurs de sites statiques nécessite l&amp;rsquo;installation de python, ruby ou autres.&lt;/p&gt;

&lt;p&gt;C&amp;rsquo;est là que &lt;a href=&#34;https://gohugo.io/&#34;&gt;hugo&lt;/a&gt; se distingue des autres outils.&lt;/p&gt;

&lt;p&gt;Le fait qu&amp;rsquo;il soit écrit en &lt;a href=&#34;https://golang.org/&#34;&gt;golang&lt;/a&gt; permet d&amp;rsquo;avoir:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;un simple exécutable à lancer, sans dépendance.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;une application légère et rapide.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Il a également un autre avantage.&lt;br /&gt;
En lançant le serveur de développement intégré à l&amp;rsquo;application, le rendu est automatiquement mis à jour lors de l&amp;rsquo;édition des fichiers.&lt;br /&gt;
Cette mise à jour est presque immédiate.&lt;/p&gt;

&lt;h1 id=&#34;l-hébergement&#34;&gt;L&amp;rsquo;hébergement&lt;/h1&gt;

&lt;p&gt;Pour héberger un site statique, tout type de service d&amp;rsquo;hébergement peu être utilisé.&lt;br /&gt;
Il suffit de déposer les fichiers générés sur un serveur web.&lt;/p&gt;

&lt;p&gt;Sur le poste professionnel (w2), je ne peu pas installer de client FTP.&lt;br /&gt;
Les choix sont donc très limités.&lt;/p&gt;

&lt;p&gt;J&amp;rsquo;ai également besoin de travailler sur le contenu (les fichiers markdown) à partir de mes différents postes.&lt;br /&gt;
Des outils comme Github, bitbucket ou Gitlab sont tout indiqués pour le partager des sources.&lt;br /&gt;
Ils permettent de plus d&amp;rsquo;héberger un site web statique gratuitement.&lt;/p&gt;

&lt;p&gt;Ayant déjà un dépôt privé sous bitbucket, je choisi donc d&amp;rsquo;utiliser github pour ce blog.&lt;br /&gt;
Je trouve l&amp;rsquo;interface un peu plus pratique et je n&amp;rsquo;ai pas besoin de dépôt privé pour les sources.&lt;/p&gt;

&lt;h1 id=&#34;les-éditeurs-de-texte&#34;&gt;Les éditeurs de texte&lt;/h1&gt;

&lt;p&gt;Pour éditer des fichiers markdown, un simple éditeur de texte suffis.&lt;br /&gt;
De plus, comme dit plus haut, hugo permet de visualiser les modifications en cous d&amp;rsquo;écriture.&lt;br /&gt;
Il n&amp;rsquo;est donc pas utile d&amp;rsquo;utiliser de plugin ou un éditeur spécifiquement prévu pour le markdown pour visualiser du rendu en cours de frappe.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sous s2 (mubuntu), l&amp;rsquo;éditeur par défaut est pluma. Il est largement suffisant pour cette utilisation.&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;Il existe un plugin pour&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;la coloration syntaxique du markdown.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;plier et déplier des blocs de code.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Je parlerai de ces plugins dans un futur article.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Sous w1 (Windows 7), j&amp;rsquo;utilise principalement notepad++.&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;Il existe également un fichier de définition pour la colorisation du markdown.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;vim est utilisable sur les 2 mais je n&amp;rsquo;ai pas le temps de m&amp;rsquo;y remettre et de refaire une config.

&lt;ul&gt;
&lt;li&gt;Ce point fait parti de ma todo liste.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Je pense avoir trouvé les outils répondant au besoin.&lt;/p&gt;

&lt;p&gt;Il ne me reste plus qu&amp;rsquo;à mettre en place un nouveau blog, pour maintenir mes notes.&lt;br /&gt;
J&amp;rsquo;y ajouterai des articles au fur et à mesure de mes différentes expérimentations ou lectures.&lt;br /&gt;
Je modifierai les articles existants pour les compléter ou les corriger en fonction de mon apprentissage sur les différents points abordés.&lt;/p&gt;

&lt;p&gt;Je pense que la création de ce bolg-notes fera l&amp;rsquo;objet de plusieurs articles.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Correction d&#39;orthographe sous vim</title>
      <link>/2016/01/vim-correction-orthographe/</link>
      <pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/01/vim-correction-orthographe/</guid>
      <description>

&lt;h1 id=&#34;installation&#34;&gt;Installation&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Fermer vim&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;sous-window&#34;&gt;Sous window&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Aller dans le répertoire des langues vim&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd C:\Program Files\Vim\vim74\spell
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Télécharger les fichiers de traduction.&lt;br /&gt;
Penser à paramétrer le proxy si besoin &lt;code&gt;set et HTTP_PROXY=http://...&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -o fr.latin1.spl http://ftp.vim.org/vim/runtime/spell/fr.latin1.spl
curl -o fr.latin1.sug http://ftp.vim.org/vim/runtime/spell/fr.latin1.sug
curl -o fr.utf-8.spl http://ftp.vim.org/vim/runtime/spell/fr.utf-8.spl
curl -o fr.utf-8.sug http://ftp.vim.org/vim/runtime/spell/fr.utf-8.sug
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;sous-linux&#34;&gt;Sous linux&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Aller dans le répertoire des langues vim (le créer s&amp;rsquo;il n&amp;rsquo;existe pas).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p ~/.vim/spell
cd ~/.vim/spell
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Télécharger les fichiers de traduction&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://ftp.vim.org/vim/runtime/spell/fr.latin1.spl
wget http://ftp.vim.org/vim/runtime/spell/fr.latin1.sug
wget http://ftp.vim.org/vim/runtime/spell/fr.utf-8.spl
wget http://ftp.vim.org/vim/runtime/spell/fr.utf-8.sug
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;paramétrage&#34;&gt;Paramétrage&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Dans &lt;code&gt;.vimrc&lt;/code&gt; ajouter:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;set spelllang=fr&lt;/code&gt; pour définir la langue.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set spell&lt;/code&gt; pour activer la correction par défaut.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;utilisation&#34;&gt;Utilisation&lt;/h1&gt;

&lt;h2 id=&#34;en-mode-normal&#34;&gt;En mode normal&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;]s&lt;/code&gt; va au mot suivant.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[s&lt;/code&gt; va au mot précédent.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zg&lt;/code&gt; ajoute le mot dans le dictionnaire local.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zG&lt;/code&gt; ajoute le mot au dictionnaire global.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;z=&lt;/code&gt; affiche la liste des propositions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;en-mode-insertion&#34;&gt;En mode insertion&lt;/h2&gt;

&lt;p&gt;Il es possible d&amp;rsquo;afficher les propositions en cours de frappe.&lt;br /&gt;
Pour cela, il faut utiliser la complétion &lt;code&gt;Ctrl+X&lt;/code&gt;.&lt;br /&gt;
Le mode de complétion utilisé par &lt;code&gt;spell&lt;/code&gt; est &lt;code&gt;s&lt;/code&gt;.&lt;br /&gt;
Il suffit donc lorsqu&amp;rsquo;une faute apparait de faire &lt;code&gt;Ctrl+X&lt;/code&gt; puis &lt;code&gt;s&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Création du blog-notes avec Pélican</title>
      <link>/2015/12/pelican-creation-site/</link>
      <pubDate>Wed, 16 Dec 2015 22:48:34 +0100</pubDate>
      
      <guid>/2015/12/pelican-creation-site/</guid>
      <description>

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;La création de la structure du site est détaillée ici: &lt;a href=&#34;/2015/12/installation-de-pelican/&#34;&gt;Installation de Pélican&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cet article concerne la création de ce blog-notes.&lt;/p&gt;

&lt;h2 id=&#34;création-du-site&#34;&gt;Création du site&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;C:\Applis\Wiki\pelican\pelican&amp;gt;pelican-quickstart
Welcome to pelican-quickstart v3.6.3.

This script will help you create a new Pelican-based website.

Please answer the following questions so this script can generate the files
needed by Pelican.

&amp;gt; Where do you want to create your new web site? [.] sauml.bitbucket.org
&amp;gt; What will be the title of this web site? Mes Notes
&amp;gt; Who will be the author of this web site? sauml
&amp;gt; What will be the default language of this web site? [en] fr
&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   (Y/n)
&amp;gt; What is your URL prefix? (see above example; no trailing slash) http://sauml.b
itbucket.org/
&amp;gt; Do you want to enable article pagination? (Y/n)
&amp;gt; How many articles per page do you want? [10]
&amp;gt; What is your time zone? [Europe/Paris]
&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishi
ng? (Y/n)
&amp;gt; Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site d
evelopment? (Y/n)
&amp;gt; Do you want to upload your website using FTP? (y/N)
&amp;gt; Do you want to upload your website using SSH? (y/N)
&amp;gt; Do you want to upload your website using Dropbox? (y/N)
&amp;gt; Do you want to upload your website using S3? (y/N)
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? (y/N)
&amp;gt; Do you want to upload your website using GitHub Pages? (y/N)
Done. Your new project is available at C:\Applis\Wiki\pelican\pelican\sauml.bitb
ucket.org
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;création-des-lanceurs-pour-windows&#34;&gt;Création des lanceurs pour windows&lt;/h1&gt;

&lt;p&gt;Dans le répertoire sauml.bitbucket.org
Créer les fichiers suivants:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pelrun.bat&lt;/code&gt; pour générer le contenu du site de debug dans le dossier output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pelican content --debug --autoreload  --output output --settings pelicanconf.py
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;pelserve.bat&lt;/code&gt; pour lancer le site de debug&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pushd output
python -m pelican.server
popd
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;pelpub.bat&lt;/code&gt; pour générer le site de production dans le dossier output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pelican content --output output --settings publishconf.py
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour développer le site en local, lancer:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sauml.bitbucket.org&amp;gt;start pelrun.bat
sauml.bitbucket.org&amp;gt;start pelserve.bat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Le site est disponible à l&amp;rsquo;url &lt;a href=&#34;http://127.0.0.1:8000&#34;&gt;http://127.0.0.1:8000&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;configuration&#34;&gt;Configuration&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Dé-commenter &lt;code&gt;RELATIVE_URLS = True&lt;/code&gt; dans &lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Mettre &lt;code&gt;DELETE_OUTPUT_DIRECTORY = False&lt;/code&gt; dans &lt;code&gt;publishconf.py&lt;/code&gt; pour ne pas supprimer le dépôt git dans output.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;thèmes&#34;&gt;Thèmes&lt;/h2&gt;

&lt;p&gt;Récupérer les thèmes existants:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pelican&amp;gt;git clone https://github.com/getpelican/pelican-themes.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Définir le thème choisi dans pelicanconf.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;THEME = &amp;quot;../pelican-themes/foundation-default-colours&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;plugins&#34;&gt;Plugins&lt;/h2&gt;

&lt;p&gt;Pour les récupérer&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pelican&amp;gt;git clone https://github.com/getpelican/pelican-plugins.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puis dans pelicanconf.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PLUGIN_PATH = &#39;../pelican-plugins&#39;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Test du theme en cours</title>
      <link>/2015/12/test-theme/</link>
      <pubDate>Wed, 16 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/12/test-theme/</guid>
      <description>

&lt;h1 id=&#34;titre-niveau-1&#34;&gt;titre niveau 1&lt;/h1&gt;

&lt;h2 id=&#34;titre-niveau-2&#34;&gt;titre niveau 2&lt;/h2&gt;

&lt;h3 id=&#34;titre-niveau-3&#34;&gt;titre niveau 3&lt;/h3&gt;

&lt;h4 id=&#34;titre-niveau-4&#34;&gt;titre niveau 4&lt;/h4&gt;

&lt;h5 id=&#34;titre-niveau-5&#34;&gt;titre niveau 5&lt;/h5&gt;

&lt;h6 id=&#34;titre-niveau-6&#34;&gt;titre niveau 6&lt;/h6&gt;

&lt;p&gt;####### titre niveau 7&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;2015-12-15_pelican_installation.md&#34;&gt;2015-12-15_pelican_installation.md&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installation de Pélican</title>
      <link>/2015/12/installation-de-pelican/</link>
      <pubDate>Tue, 15 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/12/installation-de-pelican/</guid>
      <description>

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Pélican est un générateur de site statique écrit en python.&lt;/p&gt;

&lt;p&gt;Un générateur de site statique permet de générer en site constitué de pages
html à partir de fichiers texte saisis dans différents formats Markdown,
reStructuredText, &amp;hellip;&lt;/p&gt;

&lt;p&gt;Il est facile d&amp;rsquo;héberger le site généré sur github ou bitbucket par exemple.&lt;/p&gt;

&lt;h1 id=&#34;installation&#34;&gt;Installation&lt;/h1&gt;

&lt;p&gt;Python et pip doivent être installés.
Il suffit de lancer.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install pelican
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Il est préférable de l&amp;rsquo;installé dans un environnement virtuel
python.&lt;br /&gt;
Je ne le fais pas pour cette installation qui n&amp;rsquo;est pas définitive.&lt;/p&gt;

&lt;h1 id=&#34;création-des-répertoires-de-travail&#34;&gt;Création des répertoires de travail&lt;/h1&gt;

&lt;p&gt;Je crée les répertoires suivants:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pelican&lt;/code&gt; qui contiendra tous les éléments relatifs à pélican.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pelican-themes&lt;/code&gt; qui permettra de récupérer tous les thèmes pélicans.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sauml.bitbucket.org&lt;/code&gt; qui correspond à ce blog-notes.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;./pelican
├── pelican-plugins
├── pelican-themes
└── sauml.bitbucket.org
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tout est en place pour la création d&amp;rsquo;un site.&lt;br /&gt;
Un exemple est disponible ici: &lt;a href=&#34;/2015/12/pelican-creation-site/&#34;&gt;Création du blog-notes avec Pélican&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>